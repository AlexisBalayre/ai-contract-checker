services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    env_file: .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "127.0.0.1",
          "-u",
          "${MYSQL_USER}",
          "-p${MYSQL_PASSWORD}",
        ]
      interval: 10s
      timeout: 5s
      retries: 15

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 10

  minio:
    image: minio/minio:latest
    container_name: minio
    restart: unless-stopped
    env_file: .env
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:9000/minio/health/live"]
      interval: 15s
      timeout: 3s
      retries: 10

  opensearch:
    image: opensearchproject/opensearch:2.17.0
    container_name: opensearch
    restart: unless-stopped
    environment:
      discovery.type: "single-node"
      plugins.security.disabled: "true"
      OPENSEARCH_JAVA_OPTS: "-Xms512m -Xmx512m"
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: ${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
    ports:
      - "${OPENSEARCH_PORT:-9200}:9200"
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:9200"]
      interval: 15s
      timeout: 5s
      retries: 20

  dashboards:
    image: opensearchproject/opensearch-dashboards:2.17.0
    container_name: dashboards
    restart: unless-stopped
    environment:
      OPENSEARCH_HOSTS: '["http://opensearch:9200"]'
    ports:
      - "${DASHBOARDS_PORT:-5601}:5601"
    depends_on:
      opensearch:
        condition: service_healthy

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 10
    entrypoint: >
      sh -c "
        /bin/ollama serve & 
        sleep 5 && 
        ollama pull llama3.1 &&
        wait
      "

  ai:
    build:
      context: ./apps/ai
      dockerfile: Dockerfile
    container_name: ai
    restart: unless-stopped
    env_file: .env
    environment:
      OLLAMA_URL: ${OLLAMA_URL:-http://ollama:11434}
      OLLAMA_MODEL: ${OLLAMA_MODEL:-llama3}
      TZ: ${TZ:-Europe/Paris}
    ports:
      - "8000:8000"
    depends_on:
      opensearch:
        condition: service_healthy
      ollama:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/health"]
      interval: 15s
      timeout: 5s
      retries: 10

  api:
    build:
      context: ./apps/api
    container_name: api
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_URL: "mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE}"
      REDIS_URL: "redis://redis:6379/0"
      MINIO_ENDPOINT: "http://minio:9000"
      OPENSEARCH_URL: "http://opensearch:9200"
      AI_URL: "http://ai:8000"
      TZ: ${TZ:-Europe/Paris}
    ports:
      - "3000:3000"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      ai:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/health"]
      interval: 15s
      timeout: 5s
      retries: 10

volumes:
  mysql_data:
  minio_data:
  opensearch_data:
  ollama_data:
